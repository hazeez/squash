# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OptionChoice',
            fields=[
                ('choice_code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('choice_alias', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='ProductDatabase',
            fields=[
                ('product_code', models.CharField(max_length=15, serialize=False, primary_key=True)),
                ('product_alias', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDatabase',
            fields=[
                ('project_release_name', models.CharField(max_length=30, serialize=False, primary_key=True)),
                ('project_uid', models.CharField(max_length=15)),
                ('project_class', models.CharField(max_length=3, choices=[('IT', 'IT'), ('IUT', 'IUT'), ('CCB', 'CCB'), ('TEM', 'TEM')])),
                ('project_products', models.CharField(max_length=15, choices=[('FCUBS', 'FCUBS'), ('FCDB', 'FCDB'), ('FCIS', 'FCIS'), ('FCELCM', 'FCELCM'), ('FCPB', 'FCPB'), ('FCR', 'FCR'), ('FC@', 'FC@'), ('FCC', 'FCC')])),
                ('project_status', models.CharField(max_length=9, choices=[('ONG', 'Ongoing'), ('COM', 'Completed'), ('ONH', 'OnHold'), ('DRP', 'Dropped')])),
                ('project_manager', models.CharField(max_length=40, blank=True)),
                ('project_primary_sqa', models.CharField(max_length=30, choices=[('hafizul.azeez', 'hafizul.azeez'), ('pratik.ravani', 'pratik.ravani'), ('sharmila.subramani', 'sharmila.subramani'), ('chandrasekhar.paramanantham', 'chandrasekhar.paramanantham'), ('obi.ravi', 'obi.ravi'), ('kedar.chaudhari', 'kedar.chaudhari'), ('rahatul.huda', 'rahatul.huda'), ('nerissa.rodrigues', 'nerissa.rodrigues'), ('suniel.prabu', 'suniel.prabu'), ('amit.parte', 'amit.parte'), ('priyanka.pandey', 'priyanka.pandey'), ('sunanda.mishra', 'sunanda.mishra'), ('nayana.siddappa', 'nayana.siddappa'), ('tripti.prasad', 'tripti.prasad'), ('prasanna.jain', 'prasanna.jain')])),
                ('project_secondary_sqa', models.CharField(blank=True, max_length=30, choices=[('hafizul.azeez', 'hafizul.azeez'), ('pratik.ravani', 'pratik.ravani'), ('sharmila.subramani', 'sharmila.subramani'), ('chandrasekhar.paramanantham', 'chandrasekhar.paramanantham'), ('obi.ravi', 'obi.ravi'), ('kedar.chaudhari', 'kedar.chaudhari'), ('rahatul.huda', 'rahatul.huda'), ('nerissa.rodrigues', 'nerissa.rodrigues'), ('suniel.prabu', 'suniel.prabu'), ('amit.parte', 'amit.parte'), ('priyanka.pandey', 'priyanka.pandey'), ('sunanda.mishra', 'sunanda.mishra'), ('nayana.siddappa', 'nayana.siddappa'), ('tripti.prasad', 'tripti.prasad'), ('prasanna.jain', 'prasanna.jain')])),
                ('project_tertiary_sqa', models.CharField(blank=True, max_length=30, choices=[('hafizul.azeez', 'hafizul.azeez'), ('pratik.ravani', 'pratik.ravani'), ('sharmila.subramani', 'sharmila.subramani'), ('chandrasekhar.paramanantham', 'chandrasekhar.paramanantham'), ('obi.ravi', 'obi.ravi'), ('kedar.chaudhari', 'kedar.chaudhari'), ('rahatul.huda', 'rahatul.huda'), ('nerissa.rodrigues', 'nerissa.rodrigues'), ('suniel.prabu', 'suniel.prabu'), ('amit.parte', 'amit.parte'), ('priyanka.pandey', 'priyanka.pandey'), ('sunanda.mishra', 'sunanda.mishra'), ('nayana.siddappa', 'nayana.siddappa'), ('tripti.prasad', 'tripti.prasad'), ('prasanna.jain', 'prasanna.jain')])),
                ('project_region_lead', models.CharField(max_length=30, choices=[('hafizul.azeez', 'hafizul.azeez'), ('pratik.ravani', 'pratik.ravani'), ('sharmila.subramani', 'sharmila.subramani'), ('chandrasekhar.paramanantham', 'chandrasekhar.paramanantham'), ('obi.ravi', 'obi.ravi'), ('kedar.chaudhari', 'kedar.chaudhari'), ('rahatul.huda', 'rahatul.huda'), ('nerissa.rodrigues', 'nerissa.rodrigues'), ('suniel.prabu', 'suniel.prabu'), ('amit.parte', 'amit.parte'), ('priyanka.pandey', 'priyanka.pandey'), ('sunanda.mishra', 'sunanda.mishra'), ('nayana.siddappa', 'nayana.siddappa'), ('tripti.prasad', 'tripti.prasad'), ('prasanna.jain', 'prasanna.jain')])),
                ('project_region', models.CharField(max_length=4, choices=[('EMEA', 'EMEA'), ('AMER', 'Americas'), ('JAPC', 'Japan Asia Pac'), ('FCIS', 'FCIS'), ('FCPB', 'FCPB'), ('CITI', 'CITI'), ('BARC', 'Barclays')])),
                ('project_subregion', models.CharField(max_length=4, choices=[('LATM', 'LATAM'), ('AMER', 'Americas'), ('MIEA', 'Middle East'), ('AFRI', 'Africa'), ('WEEU', 'Western Europe'), ('EAEU', 'Eastern Europe'), ('INDI', 'India'), ('SOEA', 'SouthEast Asia'), ('CITI', 'Citi'), ('BARC', 'Barclays'), ('ROJA', 'Rest of JAPAC')])),
                ('project_created_date', models.DateTimeField(auto_now_add=True)),
                ('project_updated_date', models.DateTimeField(auto_now=True)),
                ('project_start_date', models.DateField(help_text=b'Please use the following format: <em>YYYY-MM-DD</em>.', blank=True)),
                ('project_end_date', models.DateField(help_text=b'Please use the following format: <em>YYYY-MM-DD</em>.', blank=True)),
                ('project_release_status', models.CharField(max_length=10, choices=[('PKOM', 'PKOM'), ('CUTSTART', 'CUT START'), ('CUTEND', 'CUT END'), ('ITR1START', 'ITR1 START'), ('ITR2START', 'ITR2 START'), ('ITR2END', 'ITR2 END'), ('PREREL', 'Pre Release'), ('RELEASED', 'Released')])),
                ('project_duration', models.IntegerField(blank=True)),
                ('project_is_pm_managed', models.BooleanField(default=False)),
                ('project_description', models.TextField(max_length=1000, blank=True)),
                ('project_svn_path', models.CharField(max_length=200, blank=True)),
                ('project_soft_path', models.CharField(max_length=200, blank=True)),
                ('project_released_date', models.DateField(help_text=b'Please use the following format: <em>YYYY-MM-DD</em>.', null=True, blank=True)),
            ],
            options={
                'ordering': ('project_status',),
            },
        ),
        migrations.CreateModel(
            name='ProjectReviewDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rs_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('no_of_requirements', models.IntegerField(blank=True)),
                ('fs_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('applicable_fs_documents', models.IntegerField(blank=True)),
                ('fs_signedoff', models.BooleanField(default=False)),
                ('fs_peer_reviewed', models.BooleanField(default=False)),
                ('fs_qmg_reviewed', models.BooleanField(default=False)),
                ('fs_baselined', models.BooleanField(default=False)),
                ('fs_documents_baselined', models.IntegerField(blank=True)),
                ('ds_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('applicable_ds_documents', models.IntegerField()),
                ('ds_peer_reviewed', models.BooleanField(default=False)),
                ('ds_qmg_reviewed', models.BooleanField(default=False)),
                ('ds_baselined', models.BooleanField(default=False)),
                ('ds_documents_baselined', models.IntegerField(blank=True)),
                ('ps_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('applicable_ps_documents', models.IntegerField(default=0)),
                ('ps_peer_reviewed', models.BooleanField(default=False)),
                ('ps_qmg_reviewed', models.BooleanField(default=False)),
                ('ps_baselined', models.BooleanField(default=False)),
                ('ps_documents_baselined', models.IntegerField(default=0)),
                ('utp_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('utp_done_by_testing_team', models.BooleanField(default=False)),
                ('utp_rounds', models.IntegerField(default=1)),
                ('applicable_utp_documents', models.IntegerField(blank=True)),
                ('utp_peer_reviewed', models.BooleanField(default=False)),
                ('utp_qmg_reviewed', models.BooleanField(default=False)),
                ('utp_baselined', models.BooleanField(default=False)),
                ('utp_documents_baselined', models.IntegerField(blank=True)),
                ('code_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('code_peer_reviewed', models.BooleanField(default=False)),
                ('code_qmg_reviewed', models.BooleanField(default=False)),
                ('code_checkedin', models.BooleanField(default=False)),
                ('total_units', models.IntegerField(blank=True)),
                ('new_units', models.IntegerField(blank=True)),
                ('iut_bug_report_obtained', models.BooleanField(default=False)),
                ('iut_bug_report_baselined', models.BooleanField(default=False)),
                ('iut_total_bugs', models.IntegerField(blank=True)),
                ('iut_atype_bugs', models.IntegerField(blank=True)),
                ('iut_btype_bugs', models.IntegerField(blank=True)),
                ('iut_ctype_bugs', models.IntegerField(blank=True)),
                ('iut_dtype_bugs', models.IntegerField(blank=True)),
                ('iut_bugs_closed', models.BooleanField(default=False)),
                ('iut_open_bug_details', models.TextField(max_length=200, blank=True)),
                ('iut_rca_done', models.BooleanField(default=False)),
                ('sampling_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('sampling_completed', models.BooleanField(default=False)),
                ('sampling_total_findings', models.IntegerField(default=0, blank=True)),
                ('sampling_A_findings', models.IntegerField(default=0, blank=True)),
                ('sampling_B_findings', models.IntegerField(default=0, blank=True)),
                ('sampling_C_findings', models.IntegerField(default=0, blank=True)),
                ('sampling_D_findings', models.IntegerField(default=0, blank=True)),
                ('sampling_findings_closed', models.BooleanField(default=False)),
                ('sampling_open_findings', models.TextField(max_length=200, blank=True)),
                ('cut_audit_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('cut_audit_completed', models.BooleanField(default=False)),
                ('total_nc', models.IntegerField(blank=True)),
                ('nc_major', models.IntegerField(blank=True)),
                ('nc_minor', models.IntegerField(blank=True)),
                ('nc_open', models.IntegerField(blank=True)),
                ('nc_closed', models.IntegerField(blank=True)),
                ('nc_details', models.TextField(max_length=1000, blank=True)),
                ('audit_report_sent', models.BooleanField(default=False)),
                ('it_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('no_of_itp', models.IntegerField(blank=True)),
                ('no_of_itp_baselined', models.IntegerField(blank=True)),
                ('itp_peer_review_done', models.BooleanField(default=False)),
                ('itp_dev_review_done', models.BooleanField(default=False)),
                ('itp_qmg_review_done', models.BooleanField(default=False)),
                ('itp_review_comments_closed', models.BooleanField(default=False)),
                ('itr1start_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('itr1_schema_details_obtained', models.BooleanField(default=False)),
                ('itr1start_tagging_done', models.BooleanField(default=False)),
                ('itr1_code_checkedin', models.BooleanField(default=False)),
                ('itr1_tps_checks_done', models.BooleanField(default=False)),
                ('itr1_fortify_checks_done', models.BooleanField(default=False)),
                ('itr1_start_email_sent', models.BooleanField(default=False)),
                ('itr1_bug_report_obtained', models.BooleanField(default=False)),
                ('itr1_bug_report_baselined', models.BooleanField(default=False)),
                ('itr1_total_bugs', models.IntegerField(blank=True)),
                ('itr1_atype_bugs', models.IntegerField(blank=True)),
                ('itr1_btype_bugs', models.IntegerField(blank=True)),
                ('itr1_ctype_bugs', models.IntegerField(blank=True)),
                ('itr1_dtype_bugs', models.IntegerField(blank=True)),
                ('itr1_bugs_closed', models.BooleanField(default=False)),
                ('itr1_open_bug_details', models.TextField(max_length=200, blank=True)),
                ('itr1_rca_done', models.BooleanField(default=False)),
                ('itr2start_applicable', models.CharField(default=b'Yes', max_length=3, choices=[('Yes', 'Yes'), ('No', 'No')])),
                ('itr2_schema_details_obtained', models.BooleanField(default=False)),
                ('itr2start_tagging_done', models.BooleanField(default=False)),
                ('itr2_code_checkedin', models.BooleanField(default=False)),
                ('itr2_tps_checks_done', models.BooleanField(default=False)),
                ('itr2_fortify_checks_done', models.BooleanField(default=False)),
                ('itr2_qmg_email_sent', models.BooleanField(default=False)),
                ('itr2_bug_report_obtained', models.BooleanField(default=False)),
                ('itr2_bug_report_baselined', models.BooleanField(default=False)),
                ('itr2_total_bugs', models.IntegerField(blank=True)),
                ('itr2_atype_bugs', models.IntegerField(blank=True)),
                ('itr2_btype_bugs', models.IntegerField(blank=True)),
                ('itr2_ctype_bugs', models.IntegerField(blank=True)),
                ('itr2_dtype_bugs', models.IntegerField(blank=True)),
                ('itr2_bugs_closed', models.BooleanField(default=False)),
                ('itr2_open_bug_details', models.TextField(max_length=200, blank=True)),
                ('itr2_rca_done', models.BooleanField(default=False)),
                ('release_name', models.ForeignKey(to='squashapp.ProjectDatabase')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('project_status_code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('project_status_alias', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('type_name', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('type_alias', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='RegionDatabase',
            fields=[
                ('region_code', models.CharField(max_length=4, serialize=False, primary_key=True)),
                ('region_alias', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='RegionLeads',
            fields=[
                ('regionlead_name', models.CharField(max_length=30, serialize=False, primary_key=True)),
                ('regionlead_alias', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseStatus',
            fields=[
                ('release_status_code', models.CharField(max_length=10, serialize=False, primary_key=True)),
                ('release_status_alias', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SQAContactDatabase',
            fields=[
                ('sqa_user_name', models.CharField(max_length=30, serialize=False, primary_key=True)),
                ('sqa_alias_name', models.CharField(max_length=30)),
                ('sqa_manager_name', models.CharField(max_length=30, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubRegionDatabase',
            fields=[
                ('sub_region_code', models.CharField(max_length=4, serialize=False, primary_key=True)),
                ('sub_region_alias', models.CharField(max_length=15)),
                ('region', models.CharField(default=b'EMEA', max_length=4, choices=[('EMEA', 'EMEA'), ('AMER', 'Americas'), ('JAPC', 'Japan Asia Pac'), ('FCIS', 'FCIS'), ('FCPB', 'FCPB'), ('CITI', 'CITI'), ('BARC', 'Barclays')])),
                ('region_lead', models.CharField(default=b'suniel.prabu', max_length=30, choices=[('chandrasekhar.paramanantham', 'chandrasekhar.paramanantham'), ('suniel.prabu', 'suniel.prabu'), ('prasanna.jain', 'prasanna.jain')])),
            ],
        ),
    ]
